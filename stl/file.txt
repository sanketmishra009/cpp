and we're gonna read them into a vector and then, we're gonna sort them. So, you can imagine that you're a humanities professor and you want to verify that a certain play was written by Shakespeare, where maybe there was some controversy. And some of the methods you might use is to see the usage of words, how often they get used. Shakespeare where there, he has, every author seems to have patterns and usage patterns,and there are statistics you can, again, apply to their texts and use those statistics to verify that it's likely that it was Shakespeare. These techniques also get used, for example, in the Bible, to figure out whether there are multiple authors and where there seems to be stylistically changes from parts of the text to other parts of the text. And again, we're going to demonstrate how powerful SDL is, so if we would try to write this in old style C or even the pre SDL C++, we would have had to write many more lines of code. All of the code would be subject to difficulty, it would make for pretty low level routines that could have lots of runtime errors. But here, we have the ability to just reuse code. Reuse code is a silver bullet that allows us to quickly and efficiently write large, Pieces of code.
and we're gonna read them into a vector and then, we're gonna sort them. So, you can imagine that you're a humanities professor and you want to verify that a certain play was written by Shakespeare, where maybe there was some controversy. And some of the methods you might use is to see the usage of words, how often they get used. Shakespeare where there, he has, every author seems to have patterns and usage patterns,and there are statistics you can, again, apply to their texts and use those statistics to verify that it's likely that it was Shakespeare. These techniques also get used, for example, in the Bible, to figure out whether there are multiple authors and where there seems to be stylistically changes from parts of the text to other parts of the text. And again, we're going to demonstrate how powerful SDL is, so if we would try to write this in old style C or even the pre SDL C++, we would have had to write many more lines of code. All of the code would be subject to difficulty, it would make for pretty low level routines that could have lots of runtime errors. But here, we have the ability to just reuse code. Reuse code is a silver bullet that allows us to quickly and efficiently write large, Pieces of code.
Play video starting at :2:42 and follow transcript
and we're gonna read them into a vector and then, we're gonna sort them. So, you can imagine that you're a humanities professor and you want to verify that a certain play was written by Shakespeare, where maybe there was some controversy. And some of the methods you might use is to see the usage of words, how often they get used. Shakespeare where there, he has, every author seems to have patterns and usage patterns,and there are statistics you can, again, apply to their texts and use those statistics to verify that it's likely that it was Shakespeare. These techniques also get used, for example, in the Bible, to figure out whether there are multiple authors and where there seems to be stylistically changes from parts of the text to other parts of the text. And again, we're going to demonstrate how powerful SDL is, so if we would try to write this in old style C or even the pre SDL C++, we would have had to write many more lines of code. All of the code would be subject to difficulty, it would make for pretty low level routines that could have lots of runtime errors. But here, we have the ability to just reuse code. Reuse code is a silver bullet that allows us to quickly and efficiently write large, Pieces of code.
Play video starting at :2:42 and follow transcript
and we're gonna read them into a vector and then, we're gonna sort them. So, you can imagine that you're a humanities professor and you want to verify that a certain play was written by Shakespeare, where maybe there was some controversy. And some of the methods you might use is to see the usage of words, how often they get used. Shakespeare where there, he has, every author seems to have patterns and usage patterns,and there are statistics you can, again, apply to their texts and use those statistics to verify that it's likely that it was Shakespeare. These techniques also get used, for example, in the Bible, to figure out whether there are multiple authors and where there seems to be stylistically changes from parts of the text to other parts of the text. And again, we're going to demonstrate how powerful SDL is, so if we would try to write this in old style C or even the pre SDL C++, we would have had to write many more lines of code. All of the code would be subject to difficulty, it would make for pretty low level routines that could have lots of runtime errors. But here, we have the ability to just reuse code. Reuse code is a silver bullet that allows us to quickly and efficiently write large, Pieces of code.
Play video starting at :2:42 and follow transcript
and we're gonna read them into a vector and then, we're gonna sort them. So, you can imagine that you're a humanities professor and you want to verify that a certain play was written by Shakespeare, where maybe there was some controversy. And some of the methods you might use is to see the usage of words, how often they get used. Shakespeare where there, he has, every author seems to have patterns and usage patterns,and there are statistics you can, again, apply to their texts and use those statistics to verify that it's likely that it was Shakespeare. These techniques also get used, for example, in the Bible, to figure out whether there are multiple authors and where there seems to be stylistically changes from parts of the text to other parts of the text. And again, we're going to demonstrate how powerful SDL is, so if we would try to write this in old style C or even the pre SDL C++, we would have had to write many more lines of code. All of the code would be subject to difficulty, it would make for pretty low level routines that could have lots of runtime errors. But here, we have the ability to just reuse code. Reuse code is a silver bullet that allows us to quickly and efficiently write large, Pieces of code.
Play video starting at :2:42 and follow transcript
and we're gonna read them into a vector and then, we're gonna sort them. So, you can imagine that you're a humanities professor and you want to verify that a certain play was written by Shakespeare, where maybe there was some controversy. And some of the methods you might use is to see the usage of words, how often they get used. Shakespeare where there, he has, every author seems to have patterns and usage patterns,and there are statistics you can, again, apply to their texts and use those statistics to verify that it's likely that it was Shakespeare. These techniques also get used, for example, in the Bible, to figure out whether there are multiple authors and where there seems to be stylistically changes from parts of the text to other parts of the text. And again, we're going to demonstrate how powerful SDL is, so if we would try to write this in old style C or even the pre SDL C++, we would have had to write many more lines of code. All of the code would be subject to difficulty, it would make for pretty low level routines that could have lots of runtime errors. But here, we have the ability to just reuse code. Reuse code is a silver bullet that allows us to quickly and efficiently write large, Pieces of code.
Play video starting at :2:42 and follow transcript
and we're gonna read them into a vector and then, we're gonna sort them. So, you can imagine that you're a humanities professor and you want to verify that a certain play was written by Shakespeare, where maybe there was some controversy. And some of the methods you might use is to see the usage of words, how often they get used. Shakespeare where there, he has, every author seems to have patterns and usage patterns,and there are statistics you can, again, apply to their texts and use those statistics to verify that it's likely that it was Shakespeare. These techniques also get used, for example, in the Bible, to figure out whether there are multiple authors and where there seems to be stylistically changes from parts of the text to other parts of the text. And again, we're going to demonstrate how powerful SDL is, so if we would try to write this in old style C or even the pre SDL C++, we would have had to write many more lines of code. All of the code would be subject to difficulty, it would make for pretty low level routines that could have lots of runtime errors. But here, we have the ability to just reuse code. Reuse code is a silver bullet that allows us to quickly and efficiently write large, Pieces of code.
Play video starting at :2:42 and follow transcript
The actual reading of that file uses white space to distinguish individual strings. So we don't have to write, for example, some elementary routine that would crunch characters looking for white space to separate out the individual strings. And we also get the ability, cuz string is a dynamic type, to represent small words like a and the, from large words like polysyllabic. So arbitrary strings, which in this case are hoped to be words, can be dynamic.
Play video starting at :2:42 and follow transcript